#include <vector>

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> left(n, 1); // Initialize with all 1's
        vector<int> right(n, 1);

        // Compute the product of all elements to the left of each element
        int leftProduct = 1;
        for (int i = 0; i < n; i++) {
            left[i] = leftProduct;
            leftProduct *= nums[i];
        }

        // Compute the product of all elements to the right of each element
        int rightProduct = 1;
        for (int i = n - 1; i >= 0; i--) {
            right[i] = rightProduct;
            rightProduct *= nums[i];
        }

        // Compute the final result by multiplying left and right products
        vector<int> result(n, 0);
        for (int i = 0; i < n; i++) {
            result[i] = left[i] * right[i];
        }

        return result;
    }
};
