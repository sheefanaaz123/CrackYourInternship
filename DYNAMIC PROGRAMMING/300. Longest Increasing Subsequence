class Solution {
public:

    static int binarySearch(vector<int>& ans, int key) {
    int low = 0;
    int high = ans.size() - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (ans[mid] == key) return mid;
        else if (ans[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return high + 1;
    } 

    
    int lengthOfLIS(vector<int>& arr) {
    int size = arr.size();
    vector<int> ans;
    ans.push_back(arr[0]);
    int len = 1;

    for (int i = 1; i < size; i++) {
        if (arr[i] > ans.back()) {
            ans.push_back(arr[i]);
            len++;
        } else {
            int indx = binarySearch(ans, arr[i]);
            ans[indx] = arr[i];
        }
    }

    return len;
}
};
