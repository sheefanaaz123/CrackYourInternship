#include <vector>

class NumMatrix {
private:
    std::vector<std::vector<int>> matrix;

public:
    NumMatrix(std::vector<std::vector<int>>& matrix) {
        if (matrix.empty() || matrix[0].empty()) {
            return;
        }

        // Modify each element in the matrix to represent the cumulative sum
        for (int i = 0; i < matrix.size(); i++) {
            for (int j = 1; j < matrix[0].size(); j++) {
                matrix[i][j] += matrix[i][j - 1];
            }
        }

        for (int i = 1; i < matrix.size(); i++) {
            for (int j = 0; j < matrix[0].size(); j++) {
                matrix[i][j] += matrix[i - 1][j];
            }
        }

        this->matrix = matrix;
    }

    int sumRegion(int row1, int col1, int row2, int col2) {
        if (matrix.empty() || matrix[0].empty()) {
            return 0;
        }

        int total = matrix[row2][col2];
        int extra = (col1 != 0 ? matrix[row2][col1 - 1] : 0) + (row1 != 0 ? matrix[row1 - 1][col2] : 0) -
                    ((row1 != 0 && col1 != 0) ? matrix[row1 - 1][col1 - 1] : 0);

        return total - extra;
    }
};
