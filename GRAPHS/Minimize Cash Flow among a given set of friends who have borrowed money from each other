#include <iostream>
#include <algorithm>

using namespace std;

#define N 3

int getMin(int arr[]) {
    return min_element(arr, arr + N) - arr;
}

int getMax(int arr[]) {
    return max_element(arr, arr + N) - arr;
}

int minOf2(int x, int y) {
    return min(x, y);
}

void minCashFlowRec(int amount[]) {
    int mxCredit = getMax(amount), mxDebit = getMin(amount);

    if (amount[mxCredit] == 0 && amount[mxDebit] == 0)
        return;

    int minAmount = minOf2(-amount[mxDebit], amount[mxCredit]);
    amount[mxCredit] -= minAmount;
    amount[mxDebit] += minAmount;

    cout << "Person " << mxDebit << " pays " << minAmount << " to "
         << "Person " << mxCredit << endl;

    minCashFlowRec(amount);
}

void minCashFlow(int graph[][N]) {
    int amount[N] = {0};

    for (int p = 0; p < N; p++)
        for (int i = 0; i < N; i++)
            amount[p] += (graph[i][p] - graph[p][i]);

    minCashFlowRec(amount);
}

int main() {
    int graph[N][N] = {
        {0, 1000, 2000},
        {0, 0, 5000},
        {0, 0, 0},
    };

    minCashFlow(graph);
    return 0;
}
