#include <iostream>
#include <vector>

using namespace std;


class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
         
        vector<int>ans;

        int row = matrix.size();  
        if(row ==0 )return ans;
        int col = matrix[0].size();    
           
        int l = 0 , r = col-1 , t = 0 ,  b = row-1 , d = 0;
        
        while(l<=r && t<=b){
            if(d==0){ 
                for(int i=l;i<=r;i++){
                    ans.push_back(matrix[t][i]);
                }
                d=1;t++;
            }else if(d==1){
                  for(int i=t;i<=b;i++){
                      ans.push_back(matrix[i][r]);
                  }    
                d=2;r--;
            }else if (d==2){
                for(int i =r;i>=l;i--){
                    ans.push_back(matrix[b][i]);
                }
                d=3;b--;
            }else if (d==3){
                for(int i = b;i>=t;i--){
                     ans.push_back(matrix[i][l]);
                }
               d=0;l++; 
            }
        }
        return ans;

    }
};


int main() {

    Solution solution;

    vector<vector<int>> matrix1 = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };
    vector<int> result1 = solution.spiralOrder(matrix1);

    cout << "Test Case 1:" << endl;
    cout << "Spiral Order: [";
    for (int i = 0; i < result1.size(); ++i) {
        cout << result1[i];
        if (i < result1.size() - 1) {
            cout << ", ";
        }
    }
    cout << "]" << endl;

    return 0;
}
