#include <iostream>
#include <algorithm>

using namespace std;

// Function to check if the array is sorted in non-decreasing order or its reverse
bool isSortedOrReverse(int arr[], int n) {
    // Create a temporary array and copy the elements of the original array
    int tempArray[n];
    for (int i = 0; i < n; i++)
        tempArray[i] = arr[i];

    // Sort the temporary array in non-decreasing order
    sort(tempArray, tempArray + n);

    // Check if the array is sorted in non-decreasing order from the front
    int front;
    for (front = 0; front < n; front++)
        if (tempArray[front] != arr[front])
            break;

    // Check if the array is sorted in non-decreasing order from the back
    int back;
    for (back = n - 1; back >= 0; back--)
        if (tempArray[back] != arr[back])
            break;

    // If the entire array is sorted in non-decreasing order or its reverse
    if (front >= back)
        return true;

    // Check if there is a point of non-decreasing order within the array
    do {
        front++;
        if (arr[front - 1] < arr[front])
            return false;
    } while (front != back);

    return true;
}

int main() {
    int arr[] = {1, 2, 5, 4, 3};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Check if the array is sorted in non-decreasing order or its reverse
    isSortedOrReverse(arr, n) ? (cout << "Yes" << endl) : (cout << "No" << endl);

    return 0;
}
