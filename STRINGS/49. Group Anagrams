#include <iostream>
#include <unordered_map>
#include <vector>

using namespace std;

class Solution {
public:
    string generate(string &s) {
        int count[26] = {0};
        for (char &ch : s) {
            count[ch - 'a']++;
        }
        string new_s;
        for (int i = 0; i < 26; i++) {
            if (count[i] > 0) {
                new_s += string(count[i], i + 'a');
            }
        }
        return new_s;
    }

    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> mp;
        for (string &s : strs) {
            string new_s = generate(s);
            mp[new_s].push_back(s);
        }
        vector<vector<string>> result;
        for (auto &it : mp) {
            result.push_back(it.second);
        }
        return result;
    }
};

int main() {
    vector<string> strs = {"eat", "tea", "tan", "ate", "nat", "bat"};
    Solution solution;
    vector<vector<string>> result = solution.groupAnagrams(strs);
    for (vector<string> vec : result) {
        for (string s : vec) {
            cout << s << " ";
        }
        cout << endl;
    }
    return 0;
}
